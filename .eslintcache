[{"/home/timothy/Data/Projects/Orion/orion-electron/src/index.js":"1","/home/timothy/Data/Projects/Orion/orion-electron/src/App.js":"2","/home/timothy/Data/Projects/Orion/orion-electron/src/reportWebVitals.js":"3","/home/timothy/Data/Projects/Orion/orion-electron/src/redux/store.js":"4","/home/timothy/Data/Projects/Orion/orion-electron/src/redux/reducer.js":"5","/home/timothy/Data/Projects/Orion/orion-electron/src/redux/action.js":"6","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Login.js":"7","/home/timothy/Data/Projects/Orion/orion-electron/src/client/index.js":"8","/home/timothy/Data/Projects/Orion/orion-electron/src/navigation/index.js":"9","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Main.js":"10","/home/timothy/Data/Projects/Orion/orion-electron/src/utils/FileSystem.js":"11","/home/timothy/Data/Projects/Orion/orion-electron/src/components/NavBar.js":"12","/home/timothy/Data/Projects/Orion/orion-electron/src/components/NavBarBtn.js":"13","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Local.js":"14","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Loading.js":"15","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/DeviceSelection.js":"16"},{"size":500,"mtime":1611995873293,"results":"17","hashOfConfig":"18"},{"size":456,"mtime":1615641132119,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611995873294,"results":"20","hashOfConfig":"18"},{"size":113,"mtime":1611997772844,"results":"21","hashOfConfig":"18"},{"size":1438,"mtime":1615644252810,"results":"22","hashOfConfig":"18"},{"size":1101,"mtime":1615644186287,"results":"23","hashOfConfig":"18"},{"size":7401,"mtime":1615622464606,"results":"24","hashOfConfig":"18"},{"size":945,"mtime":1613667829656,"results":"25","hashOfConfig":"18"},{"size":1394,"mtime":1615641876087,"results":"26","hashOfConfig":"18"},{"size":4381,"mtime":1615454560091,"results":"27","hashOfConfig":"18"},{"size":2887,"mtime":1615640674619,"results":"28","hashOfConfig":"18"},{"size":402,"mtime":1615450547483,"results":"29","hashOfConfig":"18"},{"size":870,"mtime":1615453319403,"results":"30","hashOfConfig":"18"},{"size":2684,"mtime":1615640503866,"results":"31","hashOfConfig":"18"},{"size":635,"mtime":1615624880442,"results":"32","hashOfConfig":"18"},{"size":2486,"mtime":1615644378806,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1cy2upi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/timothy/Data/Projects/Orion/orion-electron/src/index.js",[],["70","71"],"/home/timothy/Data/Projects/Orion/orion-electron/src/App.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/reportWebVitals.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/redux/store.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/redux/reducer.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/redux/action.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Login.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/client/index.js",["72"],"import { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport { setRemoteFS } from '../redux/action';\nimport { store } from \"../redux/store\";\nimport FileSystem from '../utils/FileSystem';\n\nconst FS = new FileSystem();\n\nexport const makeClient = address => {\n    const clt = new W3CWebSocket(`ws://${address}:42071`);\n    clt.onopen = () => FS.setDebug(false);\n\n    clt.onmessage = message => {\n        const cmd = message.data.slice(0, 3);\n        const payload = message.data.substring(3);\n        switch (cmd) {\n            case 'tvl':\n                const dirs = [];\n                const files = [];\n                FS.travel(payload, path => dirs.push(path), files => files.push(files), true);\n                clt.send('cfs' + JSON.stringify({ dirs, files }));\n                break;\n            case 'cnt':\n                store.dispatch(setRemoteFS(JSON.parse(payload).dirs));\n                break;\n        }\n    }\n    return clt;\n}","/home/timothy/Data/Projects/Orion/orion-electron/src/navigation/index.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Main.js",["73"],"import axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from '../components/NavBar';\n\nimport NavBarBtn from '../components/NavBarBtn';\nimport Check from '../img/icon/check.png';\nimport Folder from '../img/icon/folder.png';\nimport FolderR from '../img/icon/folderR.png';\nimport Unchecked from '../img/icon/unchecked.png';\nimport Drive from '../img/icon/drive.png';\nimport Plus from '../img/icon/plus.png';\nimport PlusS from '../img/icon/plusS.png';\nimport Save from '../img/icon/save.png';\nimport StartRemote from '../img/icon/refresh.png';\n\nimport { setRemoteFS } from '../redux/action';\nimport { store } from \"../redux/store\";\n\nclass Screen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addList: [],\n            remote: false,\n            subList: [],\n        }\n    }\n\n    toggleAddList = dir => {\n        let addList = [...this.state.addList];\n        if (addList.includes(dir))\n            addList.splice(addList.indexOf(dir), 1);\n        else\n            addList.push(dir);\n        this.setState({ addList });\n    }\n\n    toggleRemote = () => {\n        this.setState({ remote: !this.state.remote });\n        if (!this.state.remote)\n            this.props.clt.send('get' + this.props.acc.rootDir);\n        else {\n            store.dispatch(setRemoteFS([]));\n            this.setState({ addList: [] });\n        }\n    }\n\n    toggleSubList = dir => {\n        let subList = [...this.state.subList];\n        if (subList.includes(dir))\n            subList.splice(subList.indexOf(dir), 1);\n        else\n            subList.push(dir);\n        this.setState({ subList });\n    }\n\n    render() {\n        return (\n            <>\n                <NavBar>\n                    <NavBarBtn icon={this.state.remote ? PlusS : Plus} />\n                    <NavBarBtn icon={Save} />\n                    <NavBarBtn icon={StartRemote} to={'/loading'} />\n                    <NavBarBtn icon={Drive} to={'/local'}/>\n                </NavBar>\n                <div className='content'>\n                    {this.props.fs.root.local.map(dir => {\n                        return (\n                            <div className='mainDir' key={dir}>\n                                <img className='noselect mainFolderIcon' src={Folder} alt='folder' />\n                                <p className='noselect mainFolderText'>\n                                    {dir}\n                                </p>\n                                <button onClick={() => this.toggleSubList(dir)}>\n                                    <img\n                                        alt='checkbox'\n                                        className='noselect mainCheckbox'\n                                        src={this.state.subList.includes(dir) ? Check : Unchecked}\n                                    />\n                                </button>\n                            </div>\n                        );\n                    })}\n                    {this.state.remote && this.props.fs.root.remote.filter(dir => !this.props.fs.root.local.includes(dir)).map(dir => {\n                        return (\n                            <div className='mainDir' key={dir}>\n                                <img\n                                    alt='folder'\n                                    className='noselect mainFolderIcon'\n                                    src={FolderR}\n                                />\n                                <p className='noselect mainFolderText'>\n                                    {'[r] ' + dir}\n                                </p>\n                                <button onClick={() => this.toggleAddList(dir)}>\n                                    <img\n                                        alt='checkbox'\n                                        className='noselect mainCheckbox'\n                                        src={this.state.addList.includes(dir) ? Check : Unchecked}\n                                    />\n                                </button>\n                            </div>\n                        );\n                    })}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    acc: state.acc,\n    clt: state.clt,\n    dev: state.dev,\n    fs: state.fs,\n});\n\nexport default connect(mapStateToProps)(Screen);","/home/timothy/Data/Projects/Orion/orion-electron/src/utils/FileSystem.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/components/NavBar.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/components/NavBarBtn.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Local.js",[],"/home/timothy/Data/Projects/Orion/orion-electron/src/screens/Loading.js",["74"],"import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NavBar from '../components/NavBar';\n\nclass Screen extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <NavBar>\n                    <p>\n                        {`Plan: ${this.props.act}`}\n                    </p>\n                </NavBar>\n                <div className='content'>\n                    \n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    act: state.act,\n});\n\nexport default connect(mapStateToProps)(Screen);","/home/timothy/Data/Projects/Orion/orion-electron/src/screens/DeviceSelection.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":16,"column":9,"nodeType":"81","messageId":"82","endLine":26,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":8,"column":5,"nodeType":"89","messageId":"90","endLine":10,"endColumn":6},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]